name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod
      module:
        description: 'Module to destroy'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - iam-foundation
        - iam-users
        - networking
      confirm_destroy:
        description: 'Type "DESTROY" to confirm'
        required: true
        type: string

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: 'ap-southeast-2'

jobs:
  terraform-destroy:
    name: 'Terraform Destroy - ${{ inputs.environment }}'
    runs-on: ubuntu-latest
    
    if: inputs.confirm_destroy == 'DESTROY'
    
    strategy:
      matrix:
        module: ${{ inputs.module == 'all' && fromJSON('["iam-foundation", "iam-users", "networking"]') || fromJSON(format('["{0}"]', inputs.module)) }}
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.environment == 'prod' && secrets.AWS_ROLE_ARN_PROD || secrets.AWS_ROLE_ARN_DEV }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Terraform Init
      working-directory: ./assure360/${{ matrix.module }}
      run: terraform init
      
    - name: Terraform Plan Destroy
      working-directory: ./assure360/${{ matrix.module }}
      run: terraform plan -destroy -out=destroy-plan
      
    - name: Terraform Destroy
      working-directory: ./assure360/${{ matrix.module }}
      run: terraform apply -auto-approve destroy-plan
      
    - name: Create Issue for Manual Cleanup
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `[DESTROY] Manual cleanup required for ${{ matrix.module }} in ${{ inputs.environment }}`,
            body: `## Terraform Destroy Completed
            
            **Module:** ${{ matrix.module }}
            **Environment:** ${{ inputs.environment }}
            **Commit:** ${{ github.sha }}
            **Triggered by:** ${{ github.actor }}
            
            ### Manual Cleanup Required
            
            Some resources may require manual cleanup:
            - S3 buckets with objects
            - ECR repositories with images
            - CloudWatch log groups
            - Any resources with deletion protection
            
            Please verify all resources have been properly cleaned up.
            `,
            labels: ['destroy', 'cleanup-required', '${{ inputs.environment }}']
          })

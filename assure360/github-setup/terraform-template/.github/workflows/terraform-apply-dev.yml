name: Terraform Apply - Development

on:
  push:
    branches: [develop]
    paths:
      - 'assure360/**'

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: 'ap-southeast-2'
  ENVIRONMENT: 'dev'

jobs:
  terraform-apply:
    name: 'Terraform Apply - ${{ matrix.module }}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [iam-foundation, iam-users, networking]
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN_DEV }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Terraform Init
      working-directory: ./assure360/${{ matrix.module }}
      run: terraform init
      
    - name: Terraform Validate
      working-directory: ./assure360/${{ matrix.module }}
      run: terraform validate
      
    - name: Terraform Plan
      working-directory: ./assure360/${{ matrix.module }}
      run: terraform plan -out=tfplan
      
    - name: Terraform Apply
      working-directory: ./assure360/${{ matrix.module }}
      run: terraform apply -auto-approve tfplan
      
    - name: Terraform Output
      working-directory: ./assure360/${{ matrix.module }}
      run: terraform output -json > outputs.json
      
    - name: Upload Outputs
      uses: actions/upload-artifact@v4
      with:
        name: terraform-outputs-${{ matrix.module }}-${{ github.sha }}
        path: ./assure360/${{ matrix.module }}/outputs.json
        retention-days: 30

name: Terraform Plan

on:
  pull_request:
    paths:
      - 'assure360/**'
      - '.github/workflows/**'
    branches: [main, develop]

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: 'ap-southeast-2'

jobs:
  terraform-plan:
    name: 'Terraform Plan - ${{ matrix.module }}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: [iam-foundation, iam-users, networking]
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN_DEV }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Terraform Format Check
      working-directory: ./assure360/${{ matrix.module }}
      run: terraform fmt -check -recursive
      
    - name: Terraform Init
      working-directory: ./assure360/${{ matrix.module }}
      run: terraform init
      
    - name: Terraform Validate
      working-directory: ./assure360/${{ matrix.module }}
      run: terraform validate
      
    - name: Terraform Plan
      working-directory: ./assure360/${{ matrix.module }}
      run: terraform plan -out=tfplan -detailed-exitcode
      continue-on-error: true
      
    - name: Upload Plan
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: terraform-plan-${{ matrix.module }}-${{ github.sha }}
        path: ./assure360/${{ matrix.module }}/tfplan
        retention-days: 7
        
    - name: Comment PR with Plan
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const path = `./assure360/${{ matrix.module }}/tfplan`;
          
          if (fs.existsSync(path)) {
            const plan = fs.readFileSync(path, 'utf8');
            const output = `## Terraform Plan - ${{ matrix.module }}
            
            \`\`\`
            ${plan}
            \`\`\`
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
          }
